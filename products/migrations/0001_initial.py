# Generated by Django 5.0 on 2023-12-30 03:08

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Membership',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('external_product_id', models.CharField(blank=True, max_length=50, verbose_name='stripe ID')),
                ('name', models.CharField(max_length=100, verbose_name='name')),
                ('slug', models.SlugField(help_text='This field represents the unique URL for the membership.', max_length=100, unique=True)),
                ('short_description', models.TextField(blank=True, verbose_name='short description')),
                ('long_description', models.TextField(blank=True, verbose_name='long description')),
                ('entry_cost', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)], verbose_name='entry cost')),
                ('recurring_price', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)], verbose_name='price')),
                ('recurring_payment', models.CharField(choices=[('day', 'Daily'), ('week', 'Weekly'), ('month', 'Monthly'), ('year', 'Annual')], help_text='This specifies how often the recurring payment will be charged (e.g., monthly, annually).', max_length=30, verbose_name='recurring interval')),
                ('is_visible', models.BooleanField(default=True, verbose_name='Show on public site')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'membership',
                'verbose_name_plural': 'memberships',
            },
        ),
        migrations.CreateModel(
            name='UserMembership',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('external_subscription_id', models.CharField(blank=True, max_length=50, verbose_name='stripe ID')),
                ('date_subscribed', models.DateTimeField(default=django.utils.timezone.now)),
                ('status', models.CharField(choices=[('trialing', 'Trialing'), ('active', 'Active'), ('past_due', 'Past_due'), ('unpaid', 'Unpaid'), ('canceled', 'Canceled'), ('incomplete', 'Incomplete'), ('incomplete_expired', 'Incomplete_expired'), ('ended', 'Ended')], default='active', max_length=30, verbose_name='status')),
                ('recurring_price', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)], verbose_name='price')),
                ('recurring_payment', models.CharField(choices=[('day', 'Daily'), ('week', 'Weekly'), ('month', 'Monthly'), ('year', 'Annual')], help_text='This specifies how often the recurring payment will be charged (e.g., monthly, annually).', max_length=30, verbose_name='recurring interval')),
                ('membership', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='products.membership')),
            ],
            options={
                'verbose_name': 'subscription',
                'verbose_name_plural': 'subscriptions',
            },
        ),
    ]
